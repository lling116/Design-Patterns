*简单工厂：
   只有抽象产品，没有抽象工厂；
 1.工厂（Creator）角色
简单工厂模式的核心，它负责实现创建所有实例的内部逻辑。工厂类可以被外界直接调用，创建所需的产品对象。
2.抽象（Product）角色
简单工厂模式所创建的所有对象的父类，它负责描述所有实例所共有的公共接口。
3.具体产品（Concrete Product）角色
简单工厂模式所创建的具体实例对象

*具体工厂：
   抽象产品和抽象工厂都有
   
模式中包含的角色及其职责
抽象工厂（Creator）角色
工厂方法模式的核心，任何工厂类都必须实现这个接口。
具体工厂（ Concrete  Creator）角色
具体工厂类是抽象工厂的一个实现，负责实例化产品对象。
抽象（Product）角色     
工厂方法模式所创建的所有对象的父类，它负责描述所有实例所共有的公共接口。
具体产品（Concrete Product）角色 
工厂方法模式所创建的具体实例对

   
*抽象工厂：
  抽象产品和抽象工厂都有
 模式中包含的角色及其职责
 1.抽象工厂（Creator）角色 
抽象工厂模式的核心，包含对多个产品结构的声明，任何工厂类都必须实现这个接口。

2.具体工厂（ Concrete  Creator）角色
具体工厂类是抽象工厂的一个实现，负责实例化某个产品族中的产品对象。

3.抽象（Product）角色
抽象模式所创建的所有对象的父类，它负责描述所有实例所共有的公共接口。

4.具体产品（Concrete Product）角色
抽象模式所创建的具体实例对象